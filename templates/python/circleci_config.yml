version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@2.4.0

jobs:
  test:
    docker:
      - image: cimg/python:3.9.15
        user: root
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: make install
      - run:
          name: Run Tests
          command: make test

  build-and-attach-image:
    docker:
      - image: cimg/python:3.9.15
        user: root
    parameters:
      image_name:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker Image
          command: make docker-build
      - run:
          name: Attach Docker Image to Workspace
          command: docker save --output << parameters.image_name >>_image.tar << parameters.image_name >>
      - persist_to_workspace: # saves tar in workspace for up to 15 days
          root: .
          paths:
            - ./<< parameters.image_name >>_image.tar

  publish-docker-image:
    parameters:
      image_name:
        type: string
      google_project_id:
        type: string
      registry_url:
        type: string
      registry_name:
        type: string
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - gcp-cli/install
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: gcloud auth activate-service-account
          command: |
            echo "${CLIENT_SECRET}" | base64 -d > /tmp/client-secret.json
            gcloud auth activate-service-account --key-file /tmp/client-secret.json
      - run:
          name: Load Docker Image
          command: docker load --input /tmp/workspace/<< parameters.image_name >>_image.tar
      - run:
          name: GCloud Auth
          command: |
            gcloud auth configure-docker --quiet --project << parameters.google_project_id >>
            gcloud auth configure-docker << parameters.registry_url >> --quiet
      - run:
          name: Tag Docker Image
          command: |
            docker tag << parameters.image_name >>:latest << parameters.registry_url >>/<< parameters.google_project_id >>/<< parameters.registry_name >>/<< parameters.image_name >>
      - run:
          name: Publish Docker Image
          command: docker push << parameters.registry_url >>/<< parameters.google_project_id >>/<< parameters.registry_name >>/<< parameters.image_name >>

workflows:
  main:
    jobs:
      - test:
      - build-and-attach-image:
          name: Build_Docker_Image
          image_name: "docker_image_name"
          requires:
            - test
      - publish-docker-image:
          name: Publish_Docker_Image_to_Stg
          image_name: "docker_image_name"
          google_project_id: "stg-fixme"
          registry_url: "us-central1-docker.pkg.dev"
          registry_name: "fixme"
          requires:
            - Build_Docker_Image
          filters:
            branches:
              only:
                - main
      - slack_approval_notification:
          name: Slack_Approval_Notification
          filters:
            branches:
              only:
                - main
          requires:
            - Publish_Docker_Image_to_Stg
      - prod_deploy_approval:
          name: Prod_Approval
          type: approval
          filters:
            branches:
              only:
                - main
          requires:
            - Slack_Approval_Notification
      - publish-docker-image:
          name: Publish_Docker_Image_to_Prd
          image_name: "docker_image_name"
          google_project_id: "prd-fixme"
          registry_url: "us-central1-docker.pkg.dev"
          registry_name: "fixme"
          requires:
            - Build_Docker_Image
            - Prod_Approval
          filters:
            branches:
              only:
                - main